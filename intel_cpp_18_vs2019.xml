<?xml version="1.0" encoding="UTF-8" ?>
<config
    Name="Intel Parallel Studio XE 2018 for C++ with Microsoft Visual Studio 2019"
    ShortName="INTELCPP18MSVCPP2019"
    Manufacturer="Intel"
    Version="18.0"
    Language="C++"
    Priority="X"
    Location="$CPPROOT" >
    <Details
        CompilerExecutable="$COMPILER"
        CompilerDefines="$COMPDEFINES"
        CompilerFlags="$COMPFLAGS"
        OptimizationFlags="$OPTIMFLAGS"
        DebugFlags="$DEBUGFLAGS"
        IncludeFlags="$INCLUDE"
        LinkerExecutable="$LINKER"
        LinkerFlags="$LINKFLAGS $LINKTYPE"
        LinkerLibraries="$LINKLIBS"
        LinkerDebugFlags="$LINKDEBUGFLAGS"
        LinkerOptimizationFlags="$LINKOPTIMFLAGS"
        CommandLineShell="$CPPROOT\bin\iclvars.bat "
        CommandLineShellArg="intel64"
        CompilerDefineFormatter="/D%s"
        LinkerLibrarySwitchFormatter="lib%s.lib;%s.lib"
        LinkerPathFormatter="/LIBPATH:%s"
        LibrarySearchPath="$$LIB;$$LIBPATH;$$PATH;$$INCLUDE;$MATLABROOT\extern\lib\$ARCH\microsoft"
    />
    <!-- Switch guide: http://msdn.microsoft.com/en-us/library/fwkeyyhe(v=vs.71).aspx -->
    <vars
        CMDLINE100="$COMPILER /c $COMPFLAGS $OPTIM $SRC /Fo$OBJ"
        CMDLINE200="$LINKER $LINKFLAGS $LINKTYPE $LINKOPTIM $LINKEXPORTVER $OBJS $LINKLIBS /out:$EXE"
        CMDLINE250="mt -outputresource:$EXE;2 -manifest $MANIFEST"
        CMDLINE300="del $EXP $LIB $MANIFEST $ILK"

        COMPILER="icl"
        COMPFLAGS="/GR /W3 /EHs /nologo /MD $COMPDEFINES $INCLUDE"
        COMPDEFINES="/D_CRT_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE /D_SECURE_SCL=0  $MATLABMEX"
        MATLABMEX=" /DMATLAB_MEX_FILE"
        OPTIMFLAGS="/O2 /DNDEBUG"
        INCLUDE="-I&quot;$MATLABROOT\extern\include&quot; -I&quot;$MATLABROOT\simulink\include&quot;"
        DEBUGFLAGS="/Z7"

        LINKER="link"
        LINKFLAGS="/nologo /manifest /INCREMENTAL:NO"
        LINKTYPE="/DLL"
        LINKEXPORT="/EXPORT:mexFunction"
        LINKEXPORTVER="/EXPORT:mexFunction /EXPORT:mexfilerequiredapiversion"
        LINKLIBS="/LIBPATH:&quot;$MATLABROOT\extern\lib\$ARCH\microsoft&quot; libmx.lib libmex.lib libmat.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib libMatlabDataArray.lib"
        LINKDEBUGFLAGS="/debug /PDB:&quot;$TEMPNAME$LDEXT.pdb&quot;"
        LINKOPTIMFLAGS=""

        OBJEXT=".obj"
        LDEXT=".mexw64"
        SETENV="set COMPILER=$COMPILER
                set COMPFLAGS=/c $COMPFLAGS $COMPDEFINES $MATLABMEX
                set OPTIMFLAGS=$OPTIMFLAGS
                set DEBUGFLAGS=$DEBUGFLAGS
                set LINKER=$LINKER
                set LINKFLAGS=$LINKFLAGS /export:%ENTRYPOINT% $LINKTYPE $LINKLIBS $LINKEXPORT
                set LINKDEBUGFLAGS=/debug /PDB:&quot;%OUTDIR%%MEX_NAME%$LDEXT.pdb&quot;
                set NAME_OUTPUT=/out:&quot;%OUTDIR%%MEX_NAME%%MEX_EXT%&quot;"
    />
    <client>
        <engine
            CMDLINE250="mt -outputresource:$EXE;1 -manifest $MANIFEST"
            LINKLIBS="$LINKLIBS libeng.lib libMatlabEngine.lib"
            LINKEXPORT=""
            LINKEXPORTVER=""
            LDEXT=".exe"
            LINKTYPE=""
            MATLABMEX=""
        />
    </client>
    <locationFinder>
	    <CPPROOT>
            <and>
               <or>
                    <envVarExists name="ICPP_COMPILER18" />
              </or>
              <fileExists name="$$/Bin/intel64/icl.exe" />
              <dirExists name="$$/../.." />
            </and>
        </CPPROOT>
        <VCROOT>
            <or>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Enterprise -property installationPath -format value" />
					<cmdReturns name="set &quot;vcroot=$$&quot;&amp;for /f &quot;delims= &quot; %a in ('type &quot;$$\VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt&quot;') do @if exist &quot;$$\VC\Tools\MSVC\%a\bin\HostX64\x64\cl.exe&quot; call echo %vcroot%" />
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Professional -property installationPath -format value" />
					<cmdReturns name="set &quot;vcroot=$$&quot;&amp;for /f &quot;delims= &quot; %a in ('type &quot;$$\VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt&quot;') do @if exist &quot;$$\VC\Tools\MSVC\%a\bin\HostX64\x64\cl.exe&quot; call echo %vcroot%" />
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Community -property installationPath -format value" />
					<cmdReturns name="set &quot;vcroot=$$&quot;&amp;for /f &quot;delims= &quot; %a in ('type &quot;$$\VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt&quot;') do @if exist &quot;$$\VC\Tools\MSVC\%a\bin\HostX64\x64\cl.exe&quot; call echo %vcroot%" />
				</and>
			</or>
        </VCROOT>
        <SDKROOT>
            <or>
                <hklmExists path="SOFTWARE\Microsoft\Microsoft SDKs\Windows\v10.0" name="InstallationFolder" />
                <hkcuExists path="SOFTWARE\Microsoft\Microsoft SDKs\Windows\v10.0" name="InstallationFolder" />
                <hklmExists path="SOFTWARE\Wow6432Node\Microsoft\Microsoft SDKs\Windows\v10.0" name="InstallationFolder" />
                <hkcuExists path="SOFTWARE\Wow6432Node\Microsoft\Microsoft SDKs\Windows\v10.0" name="InstallationFolder" />
            </or>
        </SDKROOT>
        <VSINSTALLDIR>
            <or>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Enterprise -property installationPath -format value" />
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Professional -property installationPath -format value" />
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Community -property installationPath -format value" />
				</and>
			</or>
        </VSINSTALLDIR>
        <VCINSTALLDIR>
          <or>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Enterprise -property installationPath -format value" />
					<cmdReturns name="set &quot;vcroot=$$&quot;&amp;for /f &quot;delims= &quot; %a in ('type &quot;$$\VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt&quot;') do @if exist &quot;$$\VC\Tools\MSVC\%a\bin\HostX64\x64\cl.exe&quot; call echo %vcroot%\VC\Tools\MSVC\%a" />
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Professional -property installationPath -format value" />
					<cmdReturns name="set &quot;vcroot=$$&quot;&amp;for /f &quot;delims= &quot; %a in ('type &quot;$$\VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt&quot;') do @if exist &quot;$$\VC\Tools\MSVC\%a\bin\HostX64\x64\cl.exe&quot; call echo %vcroot%\VC\Tools\MSVC\%a" />
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Community -property installationPath -format value" />
					<cmdReturns name="set &quot;vcroot=$$&quot;&amp;for /f &quot;delims= &quot; %a in ('type &quot;$$\VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt&quot;') do @if exist &quot;$$\VC\Tools\MSVC\%a\bin\HostX64\x64\cl.exe&quot; call echo %vcroot%\VC\Tools\MSVC\%a" />
				</and>
			</or>
        </VCINSTALLDIR>
        <VCVARSALLDIR>
           <or>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Enterprise -property installationPath -format value" />
					<fileExists name="$$\VC\Auxiliary\Build\vcvarsall.bat" />
					<dirExists name="$$"/>
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Professional -property installationPath -format value" />
					<fileExists name="$$\VC\Auxiliary\Build\vcvarsall.bat" />
					<dirExists name="$$"/>
				</and>
				<and>
					<envVarExists name="ProgramFiles(x86)" />
					<fileExists name="$$\Microsoft Visual Studio\Installer\vswhere.exe" />
					<cmdReturns name="&quot;$$\\vswhere.exe&quot; -version &quot;[16.0,17.0)&quot; -products Microsoft.VisualStudio.Product.Community -property installationPath -format value" />
					<fileExists name="$$\VC\Auxiliary\Build\vcvarsall.bat" />
					<dirExists name="$$"/>
				</and>
			</or>
        </VCVARSALLDIR>
        <KITSROOT>
            <or>
                <hklmExists path="SOFTWARE\Wow6432Node\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                <hkcuExists path="SOFTWARE\Wow6432Node\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                <hklmExists path="SOFTWARE\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                <hkcuExists path="SOFTWARE\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                
            </or>
        </KITSROOT>
        <SDKVERSION>
            <and>
                <or>
                    <hklmExists path="SOFTWARE\Wow6432Node\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                    <hkcuExists path="SOFTWARE\Wow6432Node\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                    <hklmExists path="SOFTWARE\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                    <hkcuExists path="SOFTWARE\Microsoft\Windows Kits\Installed Roots" name="KitsRoot10" />
                    
                </or>
                <!-- For each folder inside '<KITSROOT>\include' check for 'ucrt' and if exists return that folder name -->
                <cmdReturns name="echo off&amp;set &quot;sdkversion=&quot;&amp;(for /f %a IN ('dir &quot;$$\include\&quot; /b /ad-h /on') do ( @if exist &quot;$$\include\%a\ucrt\&quot; set &quot;sdkversion=%a&quot; ))&amp;call echo %sdkversion%" />
            </and>
        </SDKVERSION>
    </locationFinder>
    <env
        PATH="$CPPROOT\bin\intel64;$VCINSTALLDIR\bin\HostX64\x64\;$VCROOT\Common7\IDE\VC\vcpackages;$VCROOT\Common7\IDE;$VCROOT\Common7\Tools;$SDKROOT\Bin\$SDKVERSION\x64;$SDKROOT\Bin\$SDKVERSION\x86;$SDKROOT\Bin\x64;$SDKROOT\Bin\x86;"
        INCLUDE="$CPPROOT\include;$CPPROOT\compiler\include;$VCINSTALLDIR\include;$VCINSTALLDIR\atlmfc\include;$KITSROOT\include\$SDKVERSION\ucrt;$KITSROOT\include\$SDKVERSION\shared;$KITSROOT\include\$SDKVERSION\um;$KITSROOT\include\$SDKVERSION\winrt;$MATLABROOT\extern\include"
        LIB="$CPPROOT\lib\intel64;$CPPROOT\compiler\lib\intel64;$CPPROOT\compiler\lib\intel64_win;$VCINSTALLDIR\lib\x64;$VCINSTALLDIR\atlmfc\lib\x64;$KITSROOT\Lib\$SDKVERSION\ucrt\x64;$KITSROOT\lib\$SDKVERSION\um\x64;$MATLABROOT\lib\$ARCH"
        LIBPATH="$VCINSTALLDIR\lib\x64;$CPPROOT\compiler\Lib\Intel64;$CPPROOT\compiler\lib\intel64_win;$VCINSTALLDIR\atlmfc\lib\x64"
    />
</config>
